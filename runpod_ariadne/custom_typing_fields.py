# Generated by ariadne-codegen

from .base_operation import GraphQLField


class ApiKeyGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ApiKeyGraphQLField":
        self._alias = alias
        return self


class AuditLogGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AuditLogGraphQLField":
        self._alias = alias
        return self


class AuditLogConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AuditLogConnectionGraphQLField":
        self._alias = alias
        return self


class BenchmarkPodGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BenchmarkPodGraphQLField":
        self._alias = alias
        return self


class ClientCreditChargeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ClientCreditChargeGraphQLField":
        self._alias = alias
        return self


class ContainerRegistryAuthGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ContainerRegistryAuthGraphQLField":
        self._alias = alias
        return self


class CpuFlavorGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CpuFlavorGraphQLField":
        self._alias = alias
        return self


class CpuTypeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CpuTypeGraphQLField":
        self._alias = alias
        return self


class CreditCodeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreditCodeGraphQLField":
        self._alias = alias
        return self


class DataCenterGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DataCenterGraphQLField":
        self._alias = alias
        return self


class DataCenterStorageGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DataCenterStorageGraphQLField":
        self._alias = alias
        return self


class DataCenterStorageListGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DataCenterStorageListGraphQLField":
        self._alias = alias
        return self


class DiscountGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DiscountGraphQLField":
        self._alias = alias
        return self


class EndpointGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EndpointGraphQLField":
        self._alias = alias
        return self


class EnvironmentVariableGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnvironmentVariableGraphQLField":
        self._alias = alias
        return self


class GpuGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GpuGraphQLField":
        self._alias = alias
        return self


class GpuAvailabilityGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GpuAvailabilityGraphQLField":
        self._alias = alias
        return self


class GpuTelemetryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GpuTelemetryGraphQLField":
        self._alias = alias
        return self


class GpuTypeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GpuTypeGraphQLField":
        self._alias = alias
        return self


class ImpersonationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ImpersonationGraphQLField":
        self._alias = alias
        return self


class LowestPriceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LowestPriceGraphQLField":
        self._alias = alias
        return self


class MachineGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MachineGraphQLField":
        self._alias = alias
        return self


class MachineBalanceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MachineBalanceGraphQLField":
        self._alias = alias
        return self


class MachineBenchmarkGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MachineBenchmarkGraphQLField":
        self._alias = alias
        return self


class MachineEarningGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MachineEarningGraphQLField":
        self._alias = alias
        return self


class MachineMaintenanceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MachineMaintenanceGraphQLField":
        self._alias = alias
        return self


class MachineSummaryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MachineSummaryGraphQLField":
        self._alias = alias
        return self


class MachineSystemGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MachineSystemGraphQLField":
        self._alias = alias
        return self


class MachineTelemetryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MachineTelemetryGraphQLField":
        self._alias = alias
        return self


class MachineUptimeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MachineUptimeGraphQLField":
        self._alias = alias
        return self


class NetworkStorageEarningGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "NetworkStorageEarningGraphQLField":
        self._alias = alias
        return self


class NetworkVolumeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "NetworkVolumeGraphQLField":
        self._alias = alias
        return self


class PageInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PageInfoGraphQLField":
        self._alias = alias
        return self


class PodGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PodGraphQLField":
        self._alias = alias
        return self


class PodMachineInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PodMachineInfoGraphQLField":
        self._alias = alias
        return self


class PodRegistryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PodRegistryGraphQLField":
        self._alias = alias
        return self


class PodRuntimeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PodRuntimeGraphQLField":
        self._alias = alias
        return self


class PodRuntimeContainerGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PodRuntimeContainerGraphQLField":
        self._alias = alias
        return self


class PodRuntimeGpusGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PodRuntimeGpusGraphQLField":
        self._alias = alias
        return self


class PodRuntimePortsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PodRuntimePortsGraphQLField":
        self._alias = alias
        return self


class PodTelemetryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PodTelemetryGraphQLField":
        self._alias = alias
        return self


class PodTemplateGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PodTemplateGraphQLField":
        self._alias = alias
        return self


class SavingsPlanGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SavingsPlanGraphQLField":
        self._alias = alias
        return self


class SecretGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SecretGraphQLField":
        self._alias = alias
        return self


class SpecificsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SpecificsGraphQLField":
        self._alias = alias
        return self


class SpendDetailsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SpendDetailsGraphQLField":
        self._alias = alias
        return self


class StripeReloadTransactionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "StripeReloadTransactionGraphQLField":
        self._alias = alias
        return self


class TeamGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TeamGraphQLField":
        self._alias = alias
        return self


class TeamInviteGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TeamInviteGraphQLField":
        self._alias = alias
        return self


class TeamInviteOwnerGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TeamInviteOwnerGraphQLField":
        self._alias = alias
        return self


class TeamInviteTeamGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TeamInviteTeamGraphQLField":
        self._alias = alias
        return self


class TeamMembershipGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TeamMembershipGraphQLField":
        self._alias = alias
        return self


class TeamScopesGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TeamScopesGraphQLField":
        self._alias = alias
        return self


class UserGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserGraphQLField":
        self._alias = alias
        return self


class UserBillingGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserBillingGraphQLField":
        self._alias = alias
        return self


class UserCpuCloudBillingGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserCpuCloudBillingGraphQLField":
        self._alias = alias
        return self


class UserGpuCloudBillingGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserGpuCloudBillingGraphQLField":
        self._alias = alias
        return self


class UserInformationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserInformationGraphQLField":
        self._alias = alias
        return self


class UserReferralGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserReferralGraphQLField":
        self._alias = alias
        return self


class UserReferralMonthGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserReferralMonthGraphQLField":
        self._alias = alias
        return self


class UserRunpodEndpointBillingGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserRunpodEndpointBillingGraphQLField":
        self._alias = alias
        return self


class UserServerlessBillingGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserServerlessBillingGraphQLField":
        self._alias = alias
        return self


class UserStorageBillingGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserStorageBillingGraphQLField":
        self._alias = alias
        return self


class UserSummaryBillingGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserSummaryBillingGraphQLField":
        self._alias = alias
        return self


class WebhookRequestStatusGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WebhookRequestStatusGraphQLField":
        self._alias = alias
        return self


class WorkerStateGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WorkerStateGraphQLField":
        self._alias = alias
        return self
